<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.FiveLastName.IdMapper">

	<!-- 입고 마감 조회 -->
	<!-- 입고일 품목명 정품수량 공급가액 합계 입고여부 입고일-->
	<select id="id_list" resultType="kr.co.FiveLastName.domain.IncomingDeadlineDTO">
		SELECT
		id.id_code, ri.ri_id, id.id_genuineNum, id.id_totalPrice, pa.pa_name, pr.pr_name, pi.pi_inspectedQuantity, pi.pi_status, co.co_supplyPrice, ri.ri_availability, 
		ri.ri_date, st.st_name
		
		FROM incomingDeadline id
		
		JOIN receivingInspection ri ON id.ri_id = ri.ri_id
		JOIN progressInspection pi ON ri.pi_id = pi.pi_id
		JOIN staff st ON pi.st_id = st.st_id
		JOIN shippingStatus ss ON pi.ss_id = ss.ss_id
		JOIN purchaseOrder po ON ss.po_id = po.po_id
		JOIN procurementPlanRegistration ppr ON po.ppr_id = ppr.ppr_id
		JOIN contract co ON ppr.co_id = co.co_id
		JOIN estimate es ON co.es_id = es.es_id
		JOIN partner pa ON es.pa_id = pa.pa_id
		JOIN procurmentPlan pp ON es.pp_id = pp.pp_id
		JOIN product pr ON pp.pr_id = pr.pr_id
		
		WHERE ri.ri_availability = "입고완료" and pi.pi_status = "검수완료";
	</select>
	
	<!-- 입고마감 상세 조회 -->
	<select id="id_selectOne" parameterType="String" resultType="kr.co.FiveLastName.domain.IncomingDeadlineDTO">
		SELECT
		id.*, ri.ri_date, pr.pr_name, co.co_supplyPrice		
		
		FROM incomingDeadline id		
		
		JOIN receivingInspection ri ON id.ri_id = ri.ri_id
		JOIN progressInspection pi ON ri.pi_id = pi.pi_id
		JOIN staff st ON pi.st_id = st.st_id
		JOIN shippingStatus ss ON pi.ss_id = ss.ss_id
		JOIN purchaseOrder po ON ss.po_id = po.po_id
		JOIN procurementPlanRegistration ppr ON po.ppr_id = ppr.ppr_id
		JOIN contract co ON ppr.co_id = co.co_id
		JOIN estimate es ON co.es_id = es.es_id
		JOIN partner pa ON es.pa_id = pa.pa_id
		JOIN procurmentPlan pp ON es.pp_id = pp.pp_id
		JOIN product pr ON pp.pr_id = pr.pr_id
		
		WHERE id.id_code = #{id_code}
	</select>
	
	<!-- 입고마감 등록 -->
	<insert id="id_insert" parameterType="kr.co.FiveLastName.domain.IncomingDeadlineDTO">
		INSERT INTO incomingDeadline(id_code, ri_id, id_genuineNum, id_totalPrice)
   	 	SELECT
        #{id_code},
        ri.ri_id,
        #{id_genuineNum},
        #{id_genuineNum}*co.co_supplyPrice
        
    	FROM
        receivingInspection ri
        
	    JOIN progressInspection pi ON ri.pi_id = pi.pi_id
	    JOIN staff st ON pi.st_id = st.st_id
	    JOIN shippingStatus ss ON pi.ss_id = ss.ss_id
	    JOIN purchaseOrder po ON ss.po_id = po.po_id
	    JOIN procurementPlanRegistration ppr ON po.ppr_id = ppr.ppr_id
	    JOIN contract co ON ppr.co_id = co.co_id
    	
    	WHERE ri.ri_id = #{ri_id};
	</insert>
	
	<!-- <insert id="id_insert" parameterType="kr.co.FiveLastName.domain.IncomingDeadlineDTO">
	   INSERT INTO incomingDeadline(id_code, ri_id, id_genuineNum, id_totalPrice)
	    VALUES(
	    	#{id_code, jdbcType=VARCHAR},
	        #{ri_id, jdbcType=INTEGER},
	        #{id_genuineNum, jdbcType=INTEGER},
	        #{id_genuineNum, jdbcType=INTEGER}
	        )
	</insert>-->
	
	<!-- 입고마감 수정 -->
	<update id="id-update" parameterType="kr.co.FiveLastName.domain.IncomingDeadlineDTO">
		UPDATE incomingDeadline
		SET
		id_genuineNum = #{id_genuineNum},
		id_totalPrice = #{id_totalPrice},
		id_date = now()
		WHERE
		id_code = #{id_code};
	</update>
	
	<!-- 입고마감 삭제 -->
	<delete id="id_delete" parameterType="String">
		DELETE FROM incomingDeadline WHERE id_code = {id_code}
	</delete>
</mapper>